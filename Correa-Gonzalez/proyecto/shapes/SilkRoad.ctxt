#BlueJ class context
comment0.target=SilkRoad
comment1.params=length
comment1.target=SilkRoad(int)
comment1.text=\r\n\ Constructor\ de\ SilkRoad.\r\n\ @param\ length\ la\ longitud\ del\ camino\ en\ espiral\r\n
comment10.params=location
comment10.target=void\ removeRobot(int)
comment10.text=\r\n\ Elimina\ un\ robot\ de\ una\ ubicaci\u00F3n\ espec\u00EDfica.\r\n\ @param\ location\ la\ ubicaci\u00F3n\ del\ robot\ a\ eliminar\r\n
comment11.params=location
comment11.target=Robot\ foundRobot(int)
comment11.text=\r\n\ Busca\ un\ robot\ en\ una\ ubicaci\u00F3n\ espec\u00EDfica.\r\n\ @param\ location\ la\ ubicaci\u00F3n\ donde\ buscar\ el\ robot\r\n\ @return\ el\ robot\ encontrado\ o\ null\ si\ no\ existe\r\n
comment12.params=newLocation
comment12.target=boolean\ isMoveValid(int)
comment12.text=\r\n\ Verifica\ si\ un\ movimiento\ es\ v\u00E1lido.\r\n\ @param\ newLocation\ la\ nueva\ ubicaci\u00F3n\ a\ verificar\r\n\ @return\ true\ si\ el\ movimiento\ es\ v\u00E1lido,\ false\ en\ caso\ contrario\r\n
comment13.params=newLocation
comment13.target=boolean\ checkRobotPosition(int)
comment13.text=\r\n\ Verifica\ si\ una\ posici\u00F3n\ est\u00E1\ ocupada\ por\ otro\ robot.\r\n\ @param\ newLocation\ la\ ubicaci\u00F3n\ a\ verificar\r\n\ @return\ true\ si\ la\ posici\u00F3n\ est\u00E1\ libre,\ false\ si\ est\u00E1\ ocupada\r\n
comment14.params=newLocation
comment14.target=void\ checkRobotRecollect(int)
comment14.text=\r\n\ Verifica\ si\ un\ robot\ lleg\u00F3\ a\ una\ tienda\ y\ recolecta\ ganancias.\r\n\ @param\ newLocation\ la\ ubicaci\u00F3n\ a\ verificar\r\n
comment15.params=location\ robot
comment15.target=void\ checkTimesStore(int,\ Robot)
comment15.text=\r\n\ Verifica\ y\ actualiza\ el\ estado\ de\ una\ tienda\ cuando\ un\ robot\ est\u00E1\ en\ su\ ubicaci\u00F3n.\r\n\ @param\ location\ la\ ubicaci\u00F3n\ de\ la\ tienda\r\n\ @param\ robot\ el\ robot\ en\ la\ ubicaci\u00F3n\r\n
comment16.params=location\ meters
comment16.target=void\ moveRobot(int,\ int)
comment16.text=\r\n\ Mueve\ un\ robot\ a\ una\ nueva\ ubicaci\u00F3n.\r\n\r\n\ @param\ robotToMove\ El\ robot\ que\ se\ va\ a\ mover.\r\n\ @param\ meters\ N\u00FAmero\ de\ pasos\ a\ mover;\ si\ es\ 0,\ el\ robot\ decide\ autom\u00E1ticamente.\r\n
comment17.params=location\ robotToMove
comment17.target=void\ robotBestProfit(int,\ Robot)
comment17.text=\r\n\ Mueve\ un\ robot\ autom\u00E1ticamente\ hacia\ la\ tienda\ con\ m\u00E1s\ ganancias.\r\n\ @param\ location\ la\ ubicaci\u00F3n\ actual\ del\ robot\r\n\ @param\ robotToMove\ el\ robot\ a\ mover\r\n
comment18.params=
comment18.target=void\ resupplyStores()
comment18.text=\r\n\ Reabastece\ todas\ las\ tiendas.\r\n
comment19.params=
comment19.target=void\ returnRobots()
comment19.text=\r\n\ Devuelve\ todos\ los\ robots\ a\ sus\ ubicaciones\ iniciales.\r\n
comment2.params=
comment2.target=Robot\ richestRobot()
comment2.text=\r\n\ Encuentra\ el\ robot\ con\ m\u00E1s\ tenges.\r\n\ @return\ el\ robot\ m\u00E1s\ rico\ o\ null\ si\ no\ hay\ robots\r\n
comment20.params=
comment20.target=void\ reboot()
comment20.text=\r\n\ Reinicia\ el\ sistema\ a\ su\ estado\ inicial.\r\n
comment21.params=
comment21.target=java.util.ArrayList\ getstores()
comment22.params=
comment22.target=void\ cleanColors()
comment23.params=
comment23.target=int\ profit()
comment23.text=\r\n\ Obtiene\ las\ ganancias\ totales.\r\n\ @return\ las\ ganancias\ totales\ acumuladas\r\n
comment24.params=
comment24.target=int[][]\ stores()
comment24.text=\r\n\ Obtiene\ informaci\u00F3n\ de\ todas\ las\ tiendas.\r\n\ @return\ matriz\ con\ ubicaci\u00F3n\ y\ tenges\ de\ cada\ tienda\r\n
comment25.params=
comment25.target=int[][]\ emptiedStores()
comment25.text=\r\n\ Obtiene\ informaci\u00F3n\ de\ tiendas\ vaciadas.\r\n\ @return\ matriz\ con\ ubicaci\u00F3n\ y\ veces\ vaciada\ de\ cada\ tienda\r\n
comment26.params=
comment26.target=void\ consultProfit()
comment26.text=\r\n\ Consulta\ y\ muestra\ informaci\u00F3n\ de\ ganancias\ por\ tienda.\r\n
comment27.params=
comment27.target=int[][]\ robots()
comment27.text=\r\n\ Obtiene\ informaci\u00F3n\ de\ todos\ los\ robots.\r\n\ @return\ matriz\ con\ ubicaci\u00F3n\ de\ cada\ robot\r\n
comment28.params=
comment28.target=void\ makeVisible()
comment28.text=\r\n\ Hace\ visible.\r\n
comment29.params=
comment29.target=void\ makeInvisible()
comment29.text=\r\n\ Hace\ invisible.\r\n
comment3.params=robot
comment3.target=void\ blinkRobot(Robot)
comment3.text=\r\n\ Hace\ parpadear\ visualmente\ el\ robot\ con\ mas\ tenges.\r\n\ @param\ robot\ el\ robot\ que\ debe\ parpadear\r\n
comment30.params=
comment30.target=void\ finish()
comment30.text=\r\n\ Finaliza.\r\n
comment31.params=
comment31.target=boolean\ ok()
comment31.text=\r\n\ Verifica\ si\ la\ \u00FAltima\ operaci\u00F3n\ fue\ exitosa.\r\n\ @return\ true\ si\ la\ \u00FAltima\ operaci\u00F3n\ fue\ exitosa,\ false\ en\ caso\ contrario\r\n
comment32.params=
comment32.target=void\ updateProfitBar()
comment32.text=\r\n\ Actualiza\ la\ barra\ de\ ganancias.\r\n
comment33.params=
comment33.target=int\ calculateMaxPossibleProfit()
comment33.text=\r\n\ Calcula\ el\ m\u00E1ximo\ de\ ganancias\ posibles.\r\n\ @return\ la\ suma\ de\ todas\ las\ ganancias\ iniciales\ de\ las\ tiendas\r\n
comment34.params=
comment34.target=int[][]\ robotProfits()
comment34.text=\r\n\ debuelve\ una\ matriz\ con\ la\ hubicacion\ y\ ganancia\ de\ cada\ robot\r\n\ @return\ matriz\ con\ ubicaci\u00F3n\ y\ ganancias\ de\ cada\ robot\r\n
comment35.params=
comment35.target=void\ consultRobotProfits()
comment35.text=\r\n\ Consulta\ y\ muestra\ las\ ganancias\ por\ robot.\r\n
comment36.params=robotLocation
comment36.target=void\ consultMovementProfits(int)
comment36.text=\r\n\ Consulta\ y\ muestra\ las\ ganancias\ por\ movimiento\ de\ un\ robot\ espec\u00EDfico.\r\n\ @param\ robotLocation\ la\ ubicaci\u00F3n\ del\ robot\ a\ consultar\r\n
comment4.params=
comment4.target=void\ generateSpiralPath()
comment4.text=\r\n\ Genera\ el\ camino\ en\ espiral.\r\n
comment5.params=location
comment5.target=int[]\ getCoordinates(int)
comment5.text=\r\n\ Obtiene\ las\ coordenadas\ de\ una\ ubicaci\u00F3n\ en\ el\ camino.\r\n\ @param\ location\ la\ ubicaci\u00F3n\ en\ el\ camino\r\n\ @return\ array\ con\ coordenadas\ [x,\ y]\ o\ null\ si\ la\ ubicaci\u00F3n\ es\ inv\u00E1lida\r\n
comment6.params=element\ location
comment6.target=void\ moveElementToLocation(SilkRoad.VisualElement,\ int)
comment6.text=\r\n\ Mueve\ visualmente\ un\ elemento\ a\ una\ ubicaci\u00F3n\ espec\u00EDfica.\r\n\ @param\ element\ el\ elemento\ visual\ a\ mover\r\n\ @param\ location\ la\ ubicaci\u00F3n\ destino\r\n
comment7.params=location\ tenges
comment7.target=void\ placeStore(int,\ int)
comment7.text=\r\n\ Coloca\ una\ tienda\ en\ una\ ubicaci\u00F3n\ espec\u00EDfica.\r\n\ @param\ location\ la\ ubicaci\u00F3n\ donde\ colocar\ la\ tienda\r\n\ @param\ tenges\ la\ cantidad\ de\ tenges\ iniciales\ de\ la\ tienda\r\n
comment8.params=location
comment8.target=void\ removeStore(int)
comment8.text=\r\n\ Elimina\ una\ tienda\ de\ una\ ubicaci\u00F3n\ espec\u00EDfica.\r\n\ @param\ location\ la\ ubicaci\u00F3n\ de\ la\ tienda\ a\ eliminar\r\n
comment9.params=location
comment9.target=void\ placeRobot(int)
comment9.text=\r\n\ Coloca\ un\ robot\ en\ una\ ubicaci\u00F3n\ espec\u00EDfica.\r\n\ @param\ location\ la\ ubicaci\u00F3n\ donde\ colocar\ el\ robot\r\n
numComments=37
